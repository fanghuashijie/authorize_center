server:
  port: 8080
  tomcat:
    # 默认200
    max-threads: 800
    uri-encoding: UTF-8
    # 默认200
    max-connections: 800

#FIXME 打印两种日志
# 日志
logging:
  level:
    root: info
  path: d://logs/authorize_center/

#数据库配置
spring:
  datasource:
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      username: root
      password: root
      url: jdbc:mysql://localhost:3306/springBootDemo?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=UTC
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: SELECT 1 FROM DUAL
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-open-prepared-statements: 20
      # 监控
      stat-view-servlet:
        # druid监控用户名
        login-username: test
        # druid监控密码
        login-password: test
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: false
      web-stat-filter:
        # 排除对一些静态资源的监控，以提高效率
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 配置为true，支持配置公用监控数据，缺省时多个DruidDataSource的监控数据是各自独立的
      use-global-data-source-stat: true
      #慢SQL记录
      filter:
        stat:
          slow-sql-millis: 5000
          merge-sql: true
  # redis配置，以下有默认配置的也可以使用默认配置
  redis:
    host: 127.0.0.1
    port: 6379
    jedis:
      pool:
        #最大连接数
        max-active: 8
        #最大阻塞等待时间(负数表示没限制)
        max-wait: -1
        #最大空闲
        max-idle: 8
        #最小空闲
        min-idle: 0
    #连接超时时间
    timeout: 10000

mybatis:
  mapper-locations: classpath:mapping/**/*.xml
#  config-location: classpath:mybatis-config.xml
  check-config-location: true

